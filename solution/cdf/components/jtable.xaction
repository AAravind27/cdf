<?xml version="1.0" encoding="UTF-8"?>
<action-sequence> 
  <title>Jtable</title>
  <version>1</version>
  <logging-level>ERROR</logging-level>
  <documentation> 
    <author/>  
    <description>Empty blank action sequence document</description>  
    <help/>  
    <result-type/>  
    <icon/> 
  </documentation>

  <inputs> 
	<QUERY type="string"> 
		<sources> 
			<request>query</request> 
		</sources>  
		<default-value/>
	</QUERY>  
	<CATALOG type="string">
		<sources>
			<request>catalog</request>
		</sources>
		<default-value/>
	</CATALOG>
	<JNDI type="string"> 
		<sources> 
			<request>jndi</request> 
		</sources>  
		<default-value/> 
	</JNDI>  
	<CUBE type="string"> 
		<sources> 
			<request>cube</request> 
		</sources>  
		<default-value/> 
	</CUBE>  
	<ROLE type="string"> 
		<sources> 
			<request>role</request> 
		</sources>  
		<default-value/> 
	</ROLE>  
	<PAGINATE type="string">
		<sources> 
			<request>paginate</request> 
		</sources>  
		<default-value>"true"</default-value>
	</PAGINATE>
	<ROWSPERPAGE type="string">
		<sources> 
			<request>rowsperpage</request> 
		</sources>  
		<default-value>10</default-value>
	</ROWSPERPAGE>
	<FILTER type="string">
		<sources> 
			<request>filter</request> 
		</sources>  
		<default-value>"true"</default-value>
	</FILTER>
	<INFO type="string">
		<sources> 
			<request>info</request> 
		</sources>  
		<default-value>"true"</default-value>
	</INFO>
	<DECIMALS type="string">
		<sources> 
			<request>decimals</request> 
		</sources>  
		<default-value>"2"</default-value>
	</DECIMALS>
	<HEADERS type="string">
		<sources> 
			<request>headers</request> 
		</sources>  
		<default-value/>
	</HEADERS>
	<LENGTHCHANGE type="string">
		<sources> 
			<request>lengthChange</request> 
		</sources>  
		<default-value>"true"</default-value>
	</LENGTHCHANGE>
	<SORT type="string">
		<sources> 
			<request>sort</request> 
		</sources>  
		<default-value>"true"</default-value>
	</SORT>
	<COLTYPES type="string">
		<sources> 
			<request>coltypes</request> 
		</sources>  
		<default-value/>
	</COLTYPES>
	<COLWIDTHS type="string">
		<sources> 
			<request>colwidths</request> 
		</sources>  
		<default-value/>
	</COLWIDTHS>
	<TABLEID type="string">
		<sources> 
			<request>tableId</request> 
		</sources>  
		<default-value/>
	</TABLEID>
	<SPARKLINETYPE type="string">
		<sources> 
			<request>sparklineType</request> 
		</sources>  
		<default-value>"line"</default-value>
	</SPARKLINETYPE>
	<URLTEMPLATE type="string">
		<sources>
			<request>urlTemplate</request>
		</sources>
		<default-value></default-value>
	</URLTEMPLATE>  
  </inputs>

  <outputs> 
	<results type="string"> 
      <destinations>
        <response>content</response>
      </destinations>
    </results>
    
  </outputs>
  
  <actions> 
  

    <action-definition> 
      <component-name>MDXLookupRule</component-name>
      <action-type>Query MDX</action-type>
      <action-inputs> 
		<CATALOG type="string"/>
		<JNDI type="string"/>
		<QUERY type="string"/> 
		<CUBE type="string"/>
		<ROLE type="string"/>
      </action-inputs>
      <action-resources/>
      <action-outputs> 
        <query-results type="result-set" mapping="query_result"/> 
      </action-outputs>
      <component-definition> 
        <location><![CDATA[mondrian]]></location>  
        <query>{QUERY}</query>  
        <jndi>{JNDI}</jndi> 
		<cube>{CUBE}</cube>
		<role>{ROLE}</role>
		<catalog>{CATALOG}</catalog>
      </component-definition> 
    </action-definition>
  
    <action-definition> 
      <component-name>JavascriptRule</component-name>
      <action-type>JavaScript</action-type>
      <action-inputs> 
        <query_result type="result-set"/> 
		<PAGINATE type="string"/> 
		<ROWSPERPAGE type="string"/> 
		<FILTER type="string"/> 
		<INFO type="string"/> 
		<DECIMALS type="string"/> 
		<HEADERS type="string"/> 
		<LENGTHCHANGE type="string"/> 
		<SORT type="string"/> 
		<COLTYPES type="string"/>
		<COLWIDTHS type="string"/>
		<TABLEID type="string"/>
		<URLTEMPLATE type="string"/>
		<SPARKLINETYPE type="string"/>
		<query_result type="result-set"/> 
		<query_result type="result-set"/> 
      </action-inputs>
      <action-outputs> 
        <results type="string"/> 
      </action-outputs>
      <component-definition> 
        <script><![CDATA[// MDX to Relation result set, needed for the 
		
		function addCommas(nStr)
				{
					nStr += '';
					x = nStr.split('.');
					x1 = x[0];
					x2 = x.length > 1 ? '.' + x[1] : '';
					var rgx = /(\d+)(\d{3})/;
					while (rgx.test(x1)) {
						x1 = x1.replace(rgx, '$1' + ',' + '$2');
					}
					return x1 + x2;
				};
				
		var newResults = new Packages.org.json.JSONStringer();
		
		if (query_result != null)
		{
		
			var rsmd = query_result.getMetaData() ;
			var colHeaders = rsmd.getColumnHeaders() ;
			var rowHeaders = rsmd.getRowHeaders() ;
			var colCount = rsmd.getColumnCount() ;
			var rowCount = query_result.getRowCount() ;

			var headersArray = new Packages.org.json.JSONStringer().array();
			newResults.object().key("bPaginate").value(eval(PAGINATE));
			newResults.key("iDisplayLength").value(parseInt(ROWSPERPAGE));
			newResults.key("bFilter").value(eval(FILTER));
			newResults.key("bInfo").value(eval(INFO));
			newResults.key("bSort").value(eval(SORT));
			newResults.key("bAutoWidth").value(eval("false"));
			newResults.key("bLengthChange").value(eval(LENGTHCHANGE));
			
			
			
			
			
			if(rowCount> 0)
			{
				newResults.key("aaData");
				var values = new Packages.org.json.JSONArray();
				var types = COLTYPES.split(",");
				var widths = COLWIDTHS.split(",");
				
				
				for (i=0; i<rowCount; i++)
				{
					var value = new Packages.org.json.JSONArray();

					for(j = 0; j < rowHeaders[i].length - 1; j++)
					{
						value.put(rowHeaders[i][j]);
						if(i==0){
							
							headersArray.object().key("sTitle").value("");
							headersArray.key("sClass").value("tableRowDim");
							if(j == 0 && URLTEMPLATE != "")
								headersArray.key("bUrl").value(URLTEMPLATE);
							if(widths != "" && widths[i] != "")
								headersArray.key("sWidth").value(widths[i]);
							headersArray.endObject();
						}
					}

					
					for(j=0; j< colCount; j++)
					{
						//value.put(addCommas(parseFloat(query_result.getValueAt(i,j)).toFixed(DECIMALS).toString()));
						if(types != "" && types[j] == "sparkLine")
						{
							value.put("$('#" + TABLEID + "col"+ i + "" + j + "').sparkline([" + query_result.getValueAt(i,j) + "],{type: '" + SPARKLINETYPE + "', width:'100px' ,height :'15px'})");
						}
						else
							value.put(addCommas(parseFloat(query_result.getValueAt(i,j)).toFixed(DECIMALS).toString()));
						
					
					}
					
					values.put(value);
				}
				
				//ADD HEADERS
				if(HEADERS == "") {
					for(i = 0; i < colCount; i++){
						headersArray.object().key("sTitle").value(colHeaders[0][i].toString());
						if(types != "" && types[i] != "")
							headersArray.key("sType").value(types[i]);
						headersArray.key("sClass").value("tableRowValue");
						if(widths != "" && widths[i+1] != "")
							headersArray.key("sWidth").value(widths[i+1]);
						headersArray.endObject();
					}
				}
				else{
					var headersNames = HEADERS.split(",");
					for(i = 0; i < headersNames.length; i++){
						headersArray.object().key("sTitle").value(headersNames[i]);
						if(types != "" && types[i] != "")
							headersArray.key("sType").value(types[i]);
						headersArray.key("sClass").value("tableRowValue");
						if(widths != "" && widths[i+1] != "")
							headersArray.key("sWidth").value(widths[i+1]);
						headersArray.endObject();
					}
				}
				
				headersArray.endArray();
				newResults.value(values);
				newResults.key("aoColumns");
				//To avoid caracter \" ex: "{\"sTitle\":, etc 
				//newResults.value(headersArray);
				newResults.value(new Packages.org.json.JSONArray(headersArray.toString()));
				newResults.endObject();
				
				

			
			}
		}
		
		var results = newResults.toString();
		//out.println("output: " + results);
		
		results;
		]]></script> 
      </component-definition> 
    </action-definition>
 
  </actions> 
</action-sequence>
